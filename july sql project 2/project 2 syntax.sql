-- Sales Analysis------------------------------------------------------------------------------------------------------------------------------------
-- 1. What is the total revenue generated by XYZ Retail Store?
SELECT SUM(total_amount) AS total_revenue
FROM orders;


-- 2. Which product category has generated the most revenue?;
SELECT p.category, SUM(oi.quantity * oi.unit_price) AS rev_made
FROM order_items oi
JOIN product p ON oi.product_id = p.product_id
GROUP BY p.category
ORDER BY rev_made DESC
LIMIT 1;

SELECT 
    p.category,
    SUM(p.price * s.quantity) AS total_revenue
FROM 
    product p
JOIN 
    order_items oi ON p.product_id = oi.product_id
GROUP BY 
    p.category
ORDER BY 
    total_revenue DESC
LIMIT 1;


-- 3. What are the top 5 best-selling products based on quantity sold?...
SELECT p.product_id, p.product_name, SUM(oi.quantity) AS total_quantity_sold
FROM order_items oi
JOIN product p ON oi.product_id = p.product_id
GROUP BY p.product_id, p.product_name
ORDER BY total_quantity_sold DESC
LIMIT 5;

-- Customer Insights----------------------------------------------------------------------------------------------------------------------------------
-- 1. How many unique customers have made purchases?
SELECT COUNT(DISTINCT customer_id) AS unique_customers
FROM orders;

-- 2. Which city has the highest number of customers?
SELECT city, COUNT(*) AS customer_count
FROM customers
GROUP BY city
ORDER BY customer_count DESC
LIMIT 1;

-- 3. What is the average age of customers?
SELECT AVG(age) AS average_age
FROM customers;

-- Order Analysis--------------------------------------------------------------------------------------------------------------------------------------
-- 1. How many orders have been placed in the last year?
SELECT COUNT(*) AS orders_last_year
FROM orders
WHERE order_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);

-- 2. What is the average order value (total_amount)?
SELECT AVG(total_amount) AS average_order_value
FROM orders;

-- 3. Which month has the highest total sales?
SELECT YEAR(order_date) AS sales_year, MONTH(order_date) AS sales_month, SUM(total_amount) AS total_sales
FROM orders
GROUP BY sales_year, sales_month
ORDER BY total_sales DESC
LIMIT 1;

-- Product Performance--------------------------------------------------------------------------------------------------------------------------------
-- 1. List all products that have never been sold....
SELECT 
    p.product_id, 
    p.product_name
FROM 
    product p
LEFT JOIN 
    order_items oi ON p.product_id = oi.product_id
WHERE 
    oi.product_id IS NULL;


-- 2. Identify the top 3 customers who have spent the most.
SELECT customer_id, SUM(total_amount) AS total_spent
FROM orders
GROUP BY customer_id
ORDER BY total_spent DESC
LIMIT 3;

-- 3. Which product has the highest unit price?
SELECT product_id, product_name, price AS highest_unit_price
FROM product
ORDER BY price DESC
LIMIT 1;

-- Customer Segmentation-----------------------------------------------------------------------------------------------------------------------------
-- 1. Group customers by age range (e.g., 18-25, 26-35, etc.) and find the total revenue generated by each age group.,,,
SELECT
    CASE
        WHEN age >= 18 AND age <= 25 THEN '18-25'
        WHEN age >= 26 AND age <= 35 THEN '26-35'
        WHEN age >= 36 AND age <= 45 THEN '36-45'
        ELSE 'Over 45'
    END AS age_range,
    SUM(ord.total_amount) AS total_revenue
FROM
    (SELECT
        customer_id,
        TIMESTAMPDIFF(YEAR, age, CURDATE()) AS age
    FROM
        customers) AS c
JOIN orders ord ON c.customer_id = ord.customer_id
GROUP BY
    age_range
ORDER BY
    total_revenue DESC;

-- 2. Find the percentage of male and female customers.
SELECT
    gender,
    COUNT(*) AS total_customers,
    ROUND((COUNT(*) / (SELECT COUNT(*) FROM customers)) * 100, 2) AS percentage
FROM
    customers
GROUP BY
    gender;

